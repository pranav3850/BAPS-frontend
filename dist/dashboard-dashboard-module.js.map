{"version":3,"sources":["./src/app/dashboard/dashboard.model.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.routing.ts","./src/app/dashboard/profession.model.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard.component.css"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["export class Dashboard{\r\n    constructor(\r\n// Form 1\r\n        public contactNo?: number,\r\n        public firstName?: string,\r\n        public middleName?: string,\r\n        public lastName?: string,\r\n        public mandalId?: number,\r\n        public mandalName?: string,\r\n        public mandaltype?: string,\r\n        public relationship?: string,\r\n        public index?: number,\r\n        public famulyId?:number\r\n        ){}\r\n}","export default \"<div class=\\\"main-content\\\">\\r\\n    <!-- Cards for all Counting Start -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"openTotalFamilies()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-users text-primary\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Families: {{tFamily.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i> View\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"openTotalHaribhakt()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-user text-success\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Haribhakt: {{ tHaribhakt.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i> View\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"openTotalMandal()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-address-book text-warning\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Mandal: {{ tMandal.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i> View\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"opentotalRedtick()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-check text-danger\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Red tick: {{totalRedTick.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i> View\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"openTotalYellowTick()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-check text-warning\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Yellow tick: {{tYellow.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6\\\" *ngIf=\\\"Role == 'Admin'\\\">\\r\\n            <div class=\\\"card card-stats\\\" (click)=\\\"openTotalGreenTick()\\\">\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-5 col-md-4\\\">\\r\\n                            <div class=\\\"icon-big text-center icon-warning\\\">\\r\\n                                <i class=\\\"fa fa-check text-success\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-7 col-md-8\\\">\\r\\n                            <div class=\\\"numbers\\\">\\r\\n                                <p class=\\\"card-category\\\">Total</p>\\r\\n                                <p class=\\\"card-title\\\">Green tick: {{tGreen.length}}\\r\\n                                </p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <hr>\\r\\n                    <div class=\\\"stats\\\">\\r\\n                        <i class=\\\"fa fa-arrow-right\\\"></i> View\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- Cards for all Counting End -->\\r\\n\\r\\n    <!-- DataTable for openFamilies Start -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"openFamiliesFlag\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Families List</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <label class=\\\"col-form-label\\\" style=\\\"margin-top: 5px;font-size: 18px;color: black;\\\">Search\\r\\n                                By</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                            <div class=\\\"form-group\\\" style=\\\"margin-top: 8px !important;\\\">\\r\\n                                <input type=\\\"search\\\" id=\\\"form1\\\" class=\\\"form-control\\\" placeholder=\\\"Conatct Number\\\"\\r\\n                                    [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchFamiliesList($event.target.value)\\\"\\r\\n                                    aria-label=\\\"Search\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Family Head</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <th class=\\\"text-center\\\">Total Members</th>\\r\\n                                <th class=\\\"text-right\\\">Actions</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of totalFamily | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName }} {{ item.middleName }} {{ item.lastName\\r\\n                                        }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mobNo }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.noOfFamilyMem }}</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" data-toggle=\\\"modal\\\" data-target=\\\"#familyModal\\\"\\r\\n                                                (click)=\\\"viewFamilyMembersDetails(item.familyId)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" ></i>\\r\\n                                        </button> -->\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeOfferList(item.id)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" autoHide=\\\"true\\\"\\r\\n                                responsive=\\\"true\\\">\\r\\n                            </pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal fade\\\" id=\\\"familyModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-xl modal-notice\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\r\\n                        <i class=\\\"nc-icon nc-simple-remove\\\"></i>\\r\\n                    </button>\\r\\n                    <h5 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">View Family Members</h5>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Name</th>\\r\\n                                <th class=\\\"text-center\\\">Mandal Name</th>\\r\\n                                <th class=\\\"text-center\\\">Relationship</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <!-- <th class=\\\"text-right\\\">Actions</th> -->\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of viewMembers | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName}} {{item.lastName}}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mandalName }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.relationship }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.contactNo }}</td>\\r\\n                                    <!-- <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" (click)=\\\"onlyViewOfferDetails(item.id)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#offerModal\\\"\\r\\n                                                (click)=\\\"viewOfferDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeOfferList(item.id)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td> -->\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer justify-content-center\\\">\\r\\n                    <!-- <button type=\\\"button\\\" class=\\\"btn btn-info btn-round\\\" data-dismiss=\\\"modal\\\"\\r\\n                    (click)=\\\"updateOfferDetails()\\\">\\r\\n                    <i class=\\\"fa fa-paper-plane\\\" aria-hidden=\\\"true\\\"></i> Update\\r\\n                </button> -->\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-round\\\" data-dismiss=\\\"modal\\\">\\r\\n                        <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- DataTable for openFamilies End -->\\r\\n\\r\\n    <!-- DataTable for openFamilies Start -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"openHaribhaktFlag\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Haribhakt List</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <label class=\\\"col-form-label\\\" style=\\\"margin-top: 5px;font-size: 18px;color: black;\\\">Search\\r\\n                                By</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                            <div class=\\\"form-group\\\" style=\\\"margin-top: 8px !important;\\\">\\r\\n                                <input type=\\\"search\\\" id=\\\"form1\\\" class=\\\"form-control\\\" placeholder=\\\"Conatct Number\\\"\\r\\n                                    [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchHaribhaktList($event.target.value)\\\"\\r\\n                                    aria-label=\\\"Search\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Name</th>\\r\\n                                <th class=\\\"text-center\\\">Mandal Name</th>\\r\\n                                <th class=\\\"text-center\\\">Relationship</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <th class=\\\"text-right\\\">Actions</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of totalHaribhakt | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName}} {{item.lastName}}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mandalName }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.relationship }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.contactNo }}</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" (click)=\\\"viewEditHaribhakatDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#offerModal\\\"\\r\\n                                                (click)=\\\"viewOfferDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp; -->\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeHaribhaktList(item.userId)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" autoHide=\\\"true\\\"\\r\\n                                responsive=\\\"true\\\">\\r\\n                            </pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <style>\\r\\n        .modal-xl {\\r\\n            max-width: 1504px !important;\\r\\n        }\\r\\n    </style>\\r\\n    <div class=\\\"modal fade\\\" id=\\\"editCustomerModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n        aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-xl modal-notice\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">\\r\\n                        <i class=\\\"nc-icon nc-simple-remove\\\"></i>\\r\\n                    </button>\\r\\n                    <h5 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">View/Edit Information</h5>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <form class=\\\"form-horizontal\\\" name=\\\"InfoForm\\\" #InfoForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"row\\\" style=\\\"display: -webkit-box !important;\\\" *ngIf=\\\"Role=='Admin'\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-2 col-lg-2 col-xl-2 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Select Tags</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-4 col-lg-4 col-xl-4\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.tag }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Tags</div>\\r\\n                                        <div *ngFor=\\\"let i of haribhaktTagsdata\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedHaribhaktTags(i.name,ind,'modal')\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"display: -webkit-box !important;\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label class=\\\"labeltext\\\">\\r\\n                                    <h6>First Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.firstName\\\" placeholder=\\\" Enter First Name \\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #firstName=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"firstName.errors.required\\\">\\r\\n                                        First Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!firstName.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Middle Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mname\\\" name=\\\"mname\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.middleName\\\" placeholder=\\\" Enter Middle Name \\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" #mname=\\\"ngModel\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"mname.errors && (mname.dirty || mname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"mname.errors.required\\\">\\r\\n                                        Middle Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!mname.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Last Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lname\\\" name=\\\"lname\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.lastName\\\" placeholder=\\\" Enter Last Name \\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #lname=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"lname.errors && (lname.dirty || lname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"lname.errors.required\\\">\\r\\n                                        Last Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!lname.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Contact Number</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.contactNo\\\" name=\\\"contact\\\"\\r\\n                                        placeholder=\\\"Enter Contact Number\\\" required value=\\\"\\\" pattern=\\\"^[0-9].{9,9}$\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #contact=\\\"ngModel\\\" (keyup)=\\\"verifyNumber(ind)\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"contact.errors && (contact.dirty || contact.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"contact.errors.required\\\">\\r\\n                                        Contact is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!contact.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers. Only 10 digit.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Mandal Type</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton2\\\" id=\\\"dropdownMenuButton2\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.mandalType }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Mandal Type</div>\\r\\n                                        <div *ngFor=\\\"let pos of mandalTypeList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedMandalType(pos.mandaltype,ind,'edit')\\\">{{pos.mandaltype}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Mandal Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton2\\\" id=\\\"dropdownMenuButton2\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.mandalName }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\"\\r\\n                                        aria-labelledby=\\\"dropdownMenuButton2\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Mandal </div>\\r\\n                                        <div *ngFor=\\\"let j of mandalList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedmandal(j.id,ind,'modal')\\\">{{j.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1  \\\">\\r\\n                                <label class=\\\"col-form-label \\\" style=\\\"font-weight: 700;\\\">\\r\\n                                    Relationship\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.relationship}}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right \\\"\\r\\n                                        aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Relation</div>\\r\\n                                        <div *ngFor=\\\"let j of relationList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedrelation(j.id,ind,'modal')\\\">{{j.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 \\\">\\r\\n                                <label class=\\\"col-form-label \\\" style=\\\"font-weight: 700;\\\">\\r\\n                                    Address\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.address\\\" placeholder=\\\"Enter Address\\\" value=\\\"\\\"\\r\\n                                        pattern=\\\"[#\\\\d+ ([^,]+), ([A-Z]{2}) (\\\\d{5})]\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #address=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"address.errors && (address.dirty || address.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"address.errors.required\\\">\\r\\n                                        Address is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!address.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers, Characters and Special Charatcters.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1  \\\">\\r\\n                                <label class=\\\"col-form-label\\\" style=\\\"font-weight: 700;\\\">\\r\\n                                    City/Village\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" city=\\\"city\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.city\\\" placeholder=\\\" Enter city \\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"^[a-zA-Z]+$\\\" (focus)=\\\"focus = true\\\" #city=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"city.errors && (city.dirty || city.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"city.errors.required\\\">\\r\\n                                        city name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!city.errors('pattern')\\\">\\r\\n                                        Enter Only Characters.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>pincode</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pincode\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.pincode\\\" name=\\\"pincode\\\"\\r\\n                                        placeholder=\\\"Enter pincode \\\" required value=\\\"\\\" pattern=\\\"^[0-9].{0,6}$\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #pincode=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"pincode.errors && (pincode.dirty || pincode.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"pincode.errors.required\\\">\\r\\n                                        pincode Address is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!pincode.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>E-mail</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.email\\\"\\r\\n                                        pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\r\\n                                        placeholder=\\\"Enter Email Id\\\" required value=\\\"\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>\\r\\n                                        Gender\\r\\n                                    </h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"male\\\"\\r\\n                                                    value=\\\"male\\\" [(ngModel)]=\\\"professionViewModel.gender\\\"> MALE\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"female\\\"\\r\\n                                                    value=\\\"female\\\" [(ngModel)]=\\\"professionViewModel.gender\\\"> FEMALE\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Blood Group</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.bloodGrp }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Blood Group</div>\\r\\n                                        <div *ngFor=\\\"let i of bloodGroupDataList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedBloodData(i.name,ind,'modal')\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Birth Date</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"date\\\" id=\\\"dob\\\" [(ngModel)]=\\\"professionViewModel.dob\\\" name=\\\"dob\\\"\\r\\n                                        class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Martial Status</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.maritalStatus }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Marital Status</div>\\r\\n                                        <div *ngFor=\\\"let i of maratialData\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectChangeHandlerForMarital(i.name,ind,'modal')\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Native Place</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\" Enter Native Place \\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"native\\\" name=\\\"native\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.native\\\" placeholder=\\\"Enter Native Place\\\" required\\r\\n                                        value=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" pattern=\\\"[A-Za-z ]{1,32}\\\">\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Select profession</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ professionViewModel.profession }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select profession</div>\\r\\n                                        <div *ngFor=\\\"let i of professionList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedprofession(i.name,ind,'modal')\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Occupation</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"occupation\\\" name=\\\"occupation\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.occupation\\\" placeholder=\\\" Enter occupation\\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #occupation=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"occupation.errors && (occupation.dirty || occupation.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"occupation.errors.required\\\">\\r\\n                                        occupation is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!occupation.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Company Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company\\\" name=\\\"company\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.company\\\" placeholder=\\\" Enter company\\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #company=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"company.errors && (company.dirty || company.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"company.errors.required\\\">\\r\\n                                        Company Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!company.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Type of Business</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"businessType\\\" name=\\\"businessType\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.businessType\\\" placeholder=\\\" Enter businessType\\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #businessType=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"businessType.errors && (businessType.dirty || businessType.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"businessType.errors.required\\\">\\r\\n                                        businessType is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!businessType.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Business City</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"businesscity\\\" name=\\\"businesscity\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.businesscity\\\"\\r\\n                                        placeholder=\\\" Enter Business City\\\" required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #businesscity=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"businesscity.errors && (businesscity.dirty || businesscity.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"businesscity.errors.required\\\">\\r\\n                                        Business city is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!businesscity.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Education</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"education\\\" name=\\\"education\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.education\\\" placeholder=\\\" Enter education\\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #education=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"education.errors && (education.dirty || education.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"education.errors.required\\\">\\r\\n                                        education is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!education.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>\\r\\n                                        Is Preparing For IELTS?\\r\\n                                    </h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"prepareIelts\\\"\\r\\n                                                    id=\\\"yes\\\" value=\\\"yes\\\" [(ngModel)]=\\\"professionViewModel.prepareIelts\\\">\\r\\n                                                YES\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"prepareIelts\\\" id=\\\"no\\\"\\r\\n                                                    value=\\\"no\\\" [(ngModel)]=\\\"professionViewModel.prepareIelts\\\"> NO\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Other'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Type of Work</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"professionViewModel.profession =='Other'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"workInfo\\\" name=\\\"workInfo\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.workInfo\\\" placeholder=\\\" Enter workInfo\\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #workInfo=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"workInfo.errors && (workInfo.dirty || workInfo.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"workInfo.errors.required\\\">\\r\\n                                        workInfo is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!workInfo.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Skills</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"skills\\\" name=\\\"skills\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.skill\\\" placeholder=\\\" Enter skills \\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #skills=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"skills.errors && (skills.dirty || skills.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"skills.errors.required\\\">\\r\\n                                        skills is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!skills.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-2 col-lg-2 col-xl-2 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Currently living in Foreingh country?</h6>\\r\\n                                </label>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-1 col-lg-1 col-xl-1\\\">\\r\\n                                <div class=\\\"form-check-radio\\\" style=\\\"margin-top:12px;\\\"\\r\\n                                    (click)=\\\"isForigenOpen(true,ind,'modal')\\\">\\r\\n                                    <label class=\\\"form-check-label\\\">\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"isForeignCountry\\\" id=\\\"yes\\\"\\r\\n                                            value=\\\"true\\\" [(ngModel)]=\\\"professionViewModel.isForeignCountry\\\"> YES\\r\\n                                        <span class=\\\"form-check-sign\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-1 col-lg-1 col-xl-1\\\">\\r\\n\\r\\n                                <div class=\\\"form-check-radio\\\" style=\\\"margin-top:12px;\\\"\\r\\n                                    (click)=\\\"isForigenClose(false,ind,'modal')\\\">\\r\\n                                    <label class=\\\"form-check-label\\\">\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"isForeignCountry\\\" id=\\\"no\\\"\\r\\n                                            value=\\\"false\\\" [(ngModel)]=\\\"professionViewModel.isForeignCountry\\\"> NO\\r\\n                                        <span class=\\\"form-check-sign\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"isCountry\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label class=\\\"labeltext\\\">\\r\\n                                    <h6>Enter Country</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignCountry\\\" name=\\\"foreignCountry\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.foreignCountry\\\"\\r\\n                                        placeholder=\\\" Enter Country Name \\\" required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #foreignCountry=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignCountry.errors && (foreignCountry.dirty || foreignCountry.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignCountry.errors.required\\\">\\r\\n                                        First Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignCountry.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>City Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignCity\\\" name=\\\"foreignCity\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.foreignCity\\\" placeholder=\\\" Enter City Name \\\"\\r\\n                                        required value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #foreignCity=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignCity.errors && (foreignCity.dirty || foreignCity.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignCity.errors.required\\\">\\r\\n                                        Middle Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignCity.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Foriegn Number</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignContact\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.foreignContact\\\" name=\\\"foreignContact\\\"\\r\\n                                        placeholder=\\\"Enter Foreign  Number\\\" required value=\\\"\\\" pattern=\\\"^[0-9].{9,9}$\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #foreignContact=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignContact.errors && (foreignContact.dirty || foreignContact.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignContact.errors.required\\\">\\r\\n                                        foreignContact is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignContact.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers. Only 10 digit.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer justify-content-center\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-round\\\" data-dismiss=\\\"modal\\\"\\r\\n                            (click)=\\\"updateHarbhakatDetailsById()\\\">\\r\\n                            <i class=\\\"fa fa-paper-plane\\\" aria-hidden=\\\"true\\\"></i> Update\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-round\\\" data-dismiss=\\\"modal\\\"><i\\r\\n                                class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Close</button>\\r\\n                        <!-- <div class=\\\"ml-md-auto\\\">\\r\\n                            <div class=\\\"btn btn-warning\\\" (click)=\\\"updateHarbhakatDetailsById()\\\">Update</div>\\r\\n                            \\r\\n                        </div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- DataTable for openFamilies End -->\\r\\n\\r\\n    <!-- DataTable for openMandal Start -->\\r\\n    <div style=\\\"margin-top: -93px !important; padding: 0 0 1px 1px !important;\\\" *ngIf=\\\"openMandalFlag\\\">\\r\\n\\r\\n        <app-mandal></app-mandal>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- DataTable for openMandal End -->\\r\\n\\r\\n    <!-- DataTable for RedTick Start -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"openRedtickFlag\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Redtick Haribhakt List</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <label class=\\\"col-form-label\\\" style=\\\"margin-top: 5px;font-size: 18px;color: black;\\\">Search\\r\\n                                By</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                            <div class=\\\"form-group\\\" style=\\\"margin-top: 8px !important;\\\">\\r\\n                                <input type=\\\"search\\\" id=\\\"form1\\\" class=\\\"form-control\\\" placeholder=\\\"Conatct Number\\\"\\r\\n                                    [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchManadalList($event.target.value)\\\"\\r\\n                                    aria-label=\\\"Search\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Name</th>\\r\\n                                <th class=\\\"text-center\\\">Mandal Name</th>\\r\\n                                <th class=\\\"text-center\\\">Relationship</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <th class=\\\"text-right\\\">Actions</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of tRedList | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName}} {{item.lastName}}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mandalName }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.relationship }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.contactNo }}</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" (click)=\\\"onlyViewOfferDetails(item.id)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#offerModal\\\"\\r\\n                                                (click)=\\\"viewOfferDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeHaribhaktList(item.userId)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" autoHide=\\\"true\\\"\\r\\n                                responsive=\\\"true\\\">\\r\\n                            </pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- DataTable for RedTick End -->\\r\\n\\r\\n    <!-- DataTable for YellowTick Start -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"openYellowtickFlag\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Yellowtick Haribhakt List</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <label class=\\\"col-form-label\\\" style=\\\"margin-top: 5px;font-size: 18px;color: black;\\\">Search\\r\\n                                By</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                            <div class=\\\"form-group\\\" style=\\\"margin-top: 8px !important;\\\">\\r\\n                                <input type=\\\"search\\\" id=\\\"form1\\\" class=\\\"form-control\\\" placeholder=\\\"Conatct Number\\\"\\r\\n                                    [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchYellowList($event.target.value)\\\"\\r\\n                                    aria-label=\\\"Search\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Name</th>\\r\\n                                <th class=\\\"text-center\\\">Mandal Name</th>\\r\\n                                <th class=\\\"text-center\\\">Relationship</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <th class=\\\"text-right\\\">Actions</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of totalYelloTick | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName}} {{item.lastName}}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mandalName }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.relationship }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.contactNo }}</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" (click)=\\\"onlyViewOfferDetails(item.id)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#offerModal\\\"\\r\\n                                                (click)=\\\"viewOfferDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeHaribhaktList(item.userId)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" autoHide=\\\"true\\\"\\r\\n                                responsive=\\\"true\\\">\\r\\n                            </pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- DataTable for YellowTick End -->\\r\\n    <!-- DataTable for GreenTick Start -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"openGreentickFlag\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <h4 class=\\\"card-title\\\">GreenTick Haribhakt List</h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <label class=\\\"col-form-label\\\" style=\\\"margin-top: 5px;font-size: 18px;color: black;\\\">Search\\r\\n                                By</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                            <div class=\\\"form-group\\\" style=\\\"margin-top: 8px !important;\\\">\\r\\n                                <input type=\\\"search\\\" id=\\\"form1\\\" class=\\\"form-control\\\" placeholder=\\\"Conatct Number\\\"\\r\\n                                    [(ngModel)]=\\\"search\\\" (keyup)=\\\"searchGreenList($event.target.value)\\\"\\r\\n                                    aria-label=\\\"Search\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead class=\\\"text-primary\\\">\\r\\n                                <th class=\\\"text-center\\\">#</th>\\r\\n                                <th class=\\\"text-center\\\">Name</th>\\r\\n                                <th class=\\\"text-center\\\">Mandal Name</th>\\r\\n                                <th class=\\\"text-center\\\">Relationship</th>\\r\\n                                <th class=\\\"text-center\\\">Contact Number</th>\\r\\n                                <th class=\\\"text-right\\\">Actions</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr\\r\\n                                    *ngFor=\\\"let item of totalGreenTick | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                                    <td class=\\\"text-center\\\">{{ item.index }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.firstName}} {{item.lastName}}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.mandalName }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.relationship }}</td>\\r\\n                                    <td class=\\\"text-center\\\">{{ item.contactNo }}</td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-eye\\\" (click)=\\\"onlyViewOfferDetails(item.id)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\r\\n                                            <i class=\\\"fa fa-edit\\\" data-toggle=\\\"modal\\\" data-target=\\\"#offerModal\\\"\\r\\n                                                (click)=\\\"viewOfferDetails(item)\\\"></i>\\r\\n                                        </button>\\r\\n                                        &nbsp;\\r\\n                                        <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                            (click)=\\\"removeHaribhaktList(item.userId)\\\">\\r\\n                                            <i class=\\\"fa fa-times\\\"></i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"ml-md-auto\\\">\\r\\n                            <pagination-controls (pageChange)=\\\"p = $event\\\" maxSize=\\\"10\\\" autoHide=\\\"true\\\"\\r\\n                                responsive=\\\"true\\\">\\r\\n                            </pagination-controls>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- DataTable for GreenTick End -->\\r\\n\\r\\n    <div *ngIf=\\\"professionModelList.length>0\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <h4 class=\\\"card-title\\\" style=\\\"margin-top: 10px !important;\\\">Registered Members List</h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3 ml-md-auto\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" (click)=\\\"newUser()\\\">\\r\\n                        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add New Members\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead class=\\\"text-primary\\\">\\r\\n                        <th class=\\\"text-left\\\">#</th>\\r\\n                        <th class=\\\"text-center\\\">progress</th>\\r\\n                        <th class=\\\"text-left\\\">Name</th>\\r\\n                        <th class=\\\"text-left\\\">Contact No</th>\\r\\n                        <th class=\\\"text-left\\\">Mandal</th>\\r\\n                        <th class=\\\"text-left\\\">Relation</th>\\r\\n                        <th class=\\\"text-center\\\">Actions</th>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr\\r\\n                            *ngFor=\\\"let item of professionModelList |  paginate: { id:'listing_pagination',itemsPerPage: 5, currentPage: page,totalItems:strpArray.length };let ind=index\\\">\\r\\n                            <td class=\\\"text-left\\\">{{ind+1}}</td>\\r\\n                            <td class=\\\"text-center\\\">\\r\\n                                <i class=\\\"fa fa-circle text-danger\\\" style=\\\"font-size: large;\\\" aria-hidden=\\\"true\\\"\\r\\n                                    *ngIf=\\\"item.status==1\\\"></i>\\r\\n                                <i class=\\\"fa fa-circle text-warning\\\" style=\\\"font-size: large;\\\" aria-hidden=\\\"true\\\"\\r\\n                                    *ngIf=\\\"item.status==2\\\"></i>\\r\\n                                <i class=\\\"fa fa-circle text-sucess\\\" style=\\\"font-size: large;\\\" aria-hidden=\\\"true\\\"\\r\\n                                    *ngIf=\\\"item.status==3\\\"></i>\\r\\n                            </td>\\r\\n                            <td class=\\\"text-left\\\">{{item.firstName}} {{item.middleName}} {{item.lastName}}</td>\\r\\n                            <td class=\\\"text-left\\\">{{item.contactNo}}</td>\\r\\n                            <td class=\\\"text-left\\\">{{ item.mandalType }}-{{item.mandalName}}</td>\\r\\n                            <td class=\\\"text-left\\\">{{item.relationship}}</td>\\r\\n                            <td class=\\\"text-center\\\">\\r\\n                                <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-icon btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-eye\\\" (click)=\\\"openViewInfo(item)\\\"></i>\\r\\n                                </button> &nbsp;&nbsp;\\r\\n                                <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\"\\r\\n                                    (click)=\\\"removeHaribhaktList(item.userId)\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\"></i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n\\r\\n\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--Member Information-->\\r\\n    <div *ngIf=\\\"professionModel.length>0 && isOpenForm\\\">\\r\\n        <div *ngFor=\\\"let item of professionModel; let ind=index\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-11 col-sm-11 col-xl-11 col-lg-11\\\">\\r\\n                            <h5 class=\\\"text-center\\\" *ngIf=\\\"ind==0\\\">Add Details For Head of the Family first</h5>\\r\\n                            <h5 class=\\\"text-center\\\" *ngIf=\\\"ind==1\\\">Add Your details</h5>\\r\\n                            <h5 class=\\\"text-center\\\" *ngIf=\\\"ind>1\\\">Add details for Member {{ind+1}}</h5>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-1 col-sm-1 col-xl-1 col-lg-1\\\">\\r\\n                            <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-dangerbtn-icon btn-sm\\\"\\r\\n                                (click)=\\\"closeModal(ind)\\\">\\r\\n                                <i class=\\\"fa fa-close\\\"></i>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- <h1 class=\\\"small text-muted text-center\\\" ></h1>\\r\\n                    <h4 class=\\\"small text-muted text-center\\\" ></h4>\\r\\n                    <h6 class=\\\"small text-muted text-center\\\" ></h6> -->\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form class=\\\"form-horizontal\\\" name=\\\"InfoForm\\\" #InfoForm=\\\"ngForm\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label class=\\\"labeltext\\\">\\r\\n                                    <h6>First Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\"\\r\\n                                        [(ngModel)]=\\\"item.firstName\\\" placeholder=\\\" Enter First Name \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #firstName=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"firstName.errors.required\\\">\\r\\n                                        First Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!firstName.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Middle Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mname\\\" name=\\\"mname\\\"\\r\\n                                        [(ngModel)]=\\\"item.middleName\\\" placeholder=\\\" Enter Middle Name \\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #mname=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"mname.errors && (mname.dirty || mname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"mname.errors.required\\\">\\r\\n                                        Middle Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!mname.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Last Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lname\\\" name=\\\"lname\\\"\\r\\n                                        [(ngModel)]=\\\"item.lastName\\\" placeholder=\\\" Enter Last Name \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #lname=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"lname.errors && (lname.dirty || lname.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"lname.errors.required\\\">\\r\\n                                        Last Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!lname.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Contact Number</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contact\\\" [(ngModel)]=\\\"item.contactNo\\\"\\r\\n                                        name=\\\"contact\\\" placeholder=\\\"Enter Contact Number\\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"^[0-9].{9,9}$\\\" (focus)=\\\"focus = true\\\" #contact=\\\"ngModel\\\"\\r\\n                                        (keyup)=\\\"verifyNumber(ind)\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"contact.errors && (contact.dirty || contact.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"contact.errors.required\\\">\\r\\n                                        Contact is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!contact.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers. Only 10 digit.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Select Mandal Type</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton2\\\" id=\\\"dropdownMenuButton2\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.mandalType }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Category</div>\\r\\n                                        <div *ngFor=\\\"let pos of mandalTypeList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedMandalType(pos.mandaltype,ind,'array')\\\">{{pos.mandaltype}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Select Mandal</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton2\\\" id=\\\"dropdownMenuButton2\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.mandalName }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu \\\" aria-labelledby=\\\"dropdownMenuButton2\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Mandal </div>\\r\\n                                        <div *ngFor=\\\"let j of mandalList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\" (click)=\\\"selectedmandal(j.id,ind)\\\">{{j.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Select Relationship</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.relationship}}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu \\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Relation</div>\\r\\n                                        <div *ngFor=\\\"let j of relationList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\" (click)=\\\"selectedrelation(j.id,ind)\\\">{{j.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Address</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" name=\\\"address\\\"\\r\\n                                        [(ngModel)]=\\\"item.address\\\" placeholder=\\\"Enter Address\\\" value=\\\"\\\"\\r\\n                                        pattern=\\\"[#\\\\d+ ([^,]+), ([A-Z]{2}) (\\\\d{5})]\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #address=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"address.errors && (address.dirty || address.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"address.errors.required\\\">\\r\\n                                        Address is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!address.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers, Characters and Special Charatcters.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>City/Village</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" city=\\\"city\\\"\\r\\n                                        [(ngModel)]=\\\"item.city\\\" placeholder=\\\" Enter city \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"^[a-zA-Z]+$\\\" (focus)=\\\"focus = true\\\" #city=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"city.errors && (city.dirty || city.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"city.errors.required\\\">\\r\\n                                        city name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!city.errors('pattern')\\\">\\r\\n                                        Enter Only Characters.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>pincode</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pincode\\\" [(ngModel)]=\\\"item.pincode\\\"\\r\\n                                        name=\\\"pincode\\\" placeholder=\\\"Enter pincode \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"^[0-9].{0,6}$\\\" (focus)=\\\"focus = true\\\" #pincode=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"pincode.errors && (pincode.dirty || pincode.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"pincode.errors.required\\\">\\r\\n                                        pincode Address is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!pincode.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>E-mail</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\"\\r\\n                                        [(ngModel)]=\\\"item.email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\r\\n                                        placeholder=\\\"Enter Email Id\\\" required value=\\\"\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>\\r\\n                                        Gender\\r\\n                                    </h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"male\\\"\\r\\n                                                    value=\\\"male\\\" [(ngModel)]=\\\"item.gender\\\"> MALE\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"female\\\"\\r\\n                                                    value=\\\"female\\\" [(ngModel)]=\\\"item.gender\\\"\\r\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\"> FEMALE\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Blood Group</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.bloodGrp }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Blood Group</div>\\r\\n                                        <div *ngFor=\\\"let i of bloodGroupDataList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedBloodData(i.name,ind)\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Birth Date</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"date\\\" id=\\\"dob\\\" [(ngModel)]=\\\"item.dob\\\" name=\\\"dob\\\" value=\\\"{{ item.dob }}\\\"\\r\\n                                        class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Martial Status</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.maritalStatus }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select Marital Status</div>\\r\\n                                        <div *ngFor=\\\"let i of maratialData\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectChangeHandlerForMarital(i.name,ind)\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Native Place</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\" Enter Native Place \\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"native\\\" name=\\\"native\\\"\\r\\n                                        [(ngModel)]=\\\"professionViewModel.native\\\" placeholder=\\\"Enter Native Place\\\" required\\r\\n                                        value=\\\"\\\" [ngModelOptions]=\\\"{standalone: true}\\\" pattern=\\\"[A-Za-z ]{1,32}\\\">\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Select profession</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"dropdown form-group\\\">\\r\\n                                    <button class=\\\"dropdown-toggle btn btn-info btn-round btn-block\\\" type=\\\"button\\\"\\r\\n                                        name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                        {{ item.profession }}\\r\\n                                    </button>\\r\\n                                    <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n                                        <div class=\\\"dropdown-header\\\">Select profession</div>\\r\\n                                        <div *ngFor=\\\"let i of professionList\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"\\r\\n                                                (click)=\\\"selectedprofession(i.name,ind)\\\">{{i.name}}</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Occupation</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Job'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"occupation\\\" name=\\\"occupation\\\"\\r\\n                                        [(ngModel)]=\\\"item.occupation\\\" placeholder=\\\" Enter occupation\\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #occupation=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"occupation.errors && (occupation.dirty || occupation.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"occupation.errors.required\\\">\\r\\n                                        occupation is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!occupation.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Job'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Company Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Job'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"company\\\" name=\\\"company\\\"\\r\\n                                        [(ngModel)]=\\\"item.company\\\" placeholder=\\\" Enter company\\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #company=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"company.errors && (company.dirty || company.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"company.errors.required\\\">\\r\\n                                        Company Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!company.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Type of Business</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Business'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"businessType\\\" name=\\\"businessType\\\"\\r\\n                                        [(ngModel)]=\\\"item.businessType\\\" placeholder=\\\" Enter businessType\\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #businessType=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"businessType.errors && (businessType.dirty || businessType.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"businessType.errors.required\\\">\\r\\n                                        businessType is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!businessType.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Business'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Business City</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Business'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"businesscity\\\" name=\\\"businesscity\\\"\\r\\n                                        [(ngModel)]=\\\"item.businesscity\\\" placeholder=\\\" Enter Business City\\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #businesscity=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"businesscity.errors && (businesscity.dirty || businesscity.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"businesscity.errors.required\\\">\\r\\n                                        Business City is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!businesscity.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"item.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Education</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Student'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"education\\\" name=\\\"education\\\"\\r\\n                                        [(ngModel)]=\\\"item.education\\\" placeholder=\\\" Enter education\\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #education=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"education.errors && (education.dirty || education.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"education.errors.required\\\">\\r\\n                                        education is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!education.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Student'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>\\r\\n                                        Is Preparing For IELTS?\\r\\n                                    </h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Student'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"prepareIelts\\\"\\r\\n                                                    id=\\\"yes\\\" value=\\\"yes\\\" [(ngModel)]=\\\"item.prepareIelts\\\"> YES\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-6 col-md-6 col-lg-6 col-xl-6\\\">\\r\\n                                        <div class=\\\"form-check-radio\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"prepareIelts\\\" id=\\\"no\\\"\\r\\n                                                    value=\\\"no\\\" [(ngModel)]=\\\"item.prepareIelts\\\"> NO\\r\\n                                                <span class=\\\"form-check-sign\\\"></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Other'\\\"\\r\\n                                class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Type of Work</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"item.profession =='Other'\\\" class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"workInfo\\\" name=\\\"workInfo\\\"\\r\\n                                        [(ngModel)]=\\\"item.workInfo\\\" placeholder=\\\" Enter workInfo\\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #workInfo=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"workInfo.errors && (workInfo.dirty || workInfo.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"workInfo.errors.required\\\">\\r\\n                                        workInfo is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!workInfo.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Skills</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"skills\\\" name=\\\"skills\\\"\\r\\n                                        [(ngModel)]=\\\"item.skill\\\" placeholder=\\\" Enter skills \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #skills=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"skills.errors && (skills.dirty || skills.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"skills.errors.required\\\">\\r\\n                                        skills is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!skills.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-2 col-lg-2 col-xl-2 col-form-label\\\">\\r\\n                                <label>\\r\\n                                    <h6>Currently living in Foreingh country?</h6>\\r\\n                                </label>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-1 col-lg-1 col-xl-1\\\">\\r\\n                                <div class=\\\"form-check-radio\\\" style=\\\"margin-top:12px;\\\"\\r\\n                                    (click)=\\\"isForigenOpen(true,ind)\\\">\\r\\n                                    <label class=\\\"form-check-label\\\">\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"isForeignCountry\\\" id=\\\"yes\\\"\\r\\n                                            value=\\\"true\\\" [(ngModel)]=\\\"item.isForeignCountry\\\"> YES\\r\\n                                        <span class=\\\"form-check-sign\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-6 col-md-1 col-lg-1 col-xl-1\\\">\\r\\n\\r\\n                                <div class=\\\"form-check-radio\\\" style=\\\"margin-top:12px;\\\"\\r\\n                                    (click)=\\\"isForigenClose(false,ind)\\\">\\r\\n                                    <label class=\\\"form-check-label\\\">\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"isForeignCountry\\\" id=\\\"no\\\"\\r\\n                                            value=\\\"false\\\" [(ngModel)]=\\\"item.isForeignCountry\\\"> NO\\r\\n                                        <span class=\\\"form-check-sign\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" *ngIf=\\\"isCountry\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label class=\\\"labeltext\\\">\\r\\n                                    <h6>Enter Country</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignCountry\\\" name=\\\"foreignCountry\\\"\\r\\n                                        [(ngModel)]=\\\"item.foreignCountry\\\" placeholder=\\\" Enter Country Name \\\" required\\r\\n                                        value=\\\"\\\" pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\"\\r\\n                                        #foreignCountry=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignCountry.errors && (foreignCountry.dirty || foreignCountry.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignCountry.errors.required\\\">\\r\\n                                        First Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignCountry.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>City Name</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignCity\\\" name=\\\"foreignCity\\\"\\r\\n                                        [(ngModel)]=\\\"item.foreignCity\\\" placeholder=\\\" Enter City Name \\\" required value=\\\"\\\"\\r\\n                                        pattern=\\\"[A-Za-z ]{1,32}\\\" (focus)=\\\"focus = true\\\" #foreignCity=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignCity.errors && (foreignCity.dirty || foreignCity.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignCity.errors.required\\\">\\r\\n                                        Middle Name is required\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignCity.errors('pattern')\\\">\\r\\n                                        Numbers and Special Characters not allowed\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-1 col-form-label \\\">\\r\\n                                <label>\\r\\n                                    <h6>Foriegn Number</h6>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3 \\\">\\r\\n                                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"foreignContact\\\"\\r\\n                                        [(ngModel)]=\\\"item.foreignContact\\\" name=\\\"foreignContact\\\"\\r\\n                                        placeholder=\\\"Enter Foreign  Number\\\" required value=\\\"\\\" pattern=\\\"^[0-9].{9,9}$\\\"\\r\\n                                        (focus)=\\\"focus = true\\\" #foreignContact=\\\"ngModel\\\"\\r\\n                                        [ngModelOptions]=\\\"{standalone: true}\\\" />\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"foreignContact.errors && (foreignContact.dirty || foreignContact.touched)\\\"\\r\\n                                    class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"foreignContact.errors.required\\\">\\r\\n                                        foreignContact is required.\\r\\n                                    </div>\\r\\n                                    <div [hidden]=\\\"!foreignContact.errors('pattern')\\\">\\r\\n                                        Enter Only Numbers. Only 10 digit.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"ml-md-auto\\\">\\r\\n                                <div class=\\\"btn btn-warning\\\" (click)=\\\"savePersonalInfo(item,ind)\\\">Save Draft</div>\\r\\n                                <!-- <div class=\\\"btn btn-success\\\">Submit</div> -->\\r\\n                                &nbsp;&nbsp;&nbsp;\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <br />\\r\\n                <h5 class=\\\"modal-title text-center\\\">\\r\\n                    Add Number of Family Members\\r\\n                    <br>\\r\\n                    <small class=\\\"text-muted\\\">(Including You)</small>\\r\\n                </h5>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"family\\\" [(ngModel)]=\\\"tot_mem\\\" name=\\\"family\\\"\\r\\n                            value=\\\"\\\" pattern=\\\"[0-9]{0,10}\\\" placeholder=\\\"Enter Total Numbers Of Members\\\"\\r\\n                            (focus)=\\\"focus = true\\\" #noofmem=\\\"ngModel\\\" autofocus />\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"noofmem.errors && noofmem.dirty \\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div [hidden]=\\\"!family.errors('pattern')\\\">\\r\\n                            Enter Valid Numbers\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"ml-md-auto\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"AddMoreMember()\\\">Save\\r\\n                        changes</button> &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- duplicate number modal -->\\r\\n    <div class=\\\"modal fade\\\" id=\\\"DuplicateNoModalCenter1\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <br />\\r\\n                <h6 class=\\\"modal-title text-center\\\">\\r\\n                    Family with this Contact number is registered Already\\r\\n                    <br />\\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"openOTPforAddUser()\\\">Do\\r\\n                        you want to add them?</button><br />\\r\\n                    <h3>OR</h3>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">You want to create new?</button>\\r\\n                </h6>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal fade\\\" id=\\\"DuplicateNoModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <br />\\r\\n                <h5 class=\\\"modal-title text-center\\\">\\r\\n                    <small class=\\\"text-muted\\\">Enter otp to add in family</small>\\r\\n                </h5>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"otp\\\" name=\\\"otp\\\" />\\r\\n                    </div>\\r\\n                    <!-- <div *ngIf=\\\"noofmem.errors && noofmem.dirty \\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div [hidden]=\\\"!family.errors('pattern')\\\">\\r\\n                        Enter Valid Numbers\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                </div>\\r\\n                <div class=\\\"ml-md-auto\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\"\\r\\n                        (click)=\\\"AddExistUser()\\\">Submit</button> &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal fade\\\" id=\\\"DuplicateNoModalCenterforUpdate\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <br />\\r\\n                <h5 class=\\\"modal-title text-center\\\">\\r\\n                    <small class=\\\"text-muted\\\">Enter otp to Update Information</small>\\r\\n                </h5>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'form-group-focus': focus === true }\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"updateotp\\\" name=\\\"otp\\\" />\\r\\n                    </div>\\r\\n                    <!-- <div *ngIf=\\\"noofmem.errors && noofmem.dirty \\\" class=\\\"alert alert-danger\\\">\\r\\n                    <div [hidden]=\\\"!family.errors('pattern')\\\">\\r\\n                        Enter Valid Numbers\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                </div>\\r\\n                <div class=\\\"ml-md-auto\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\"\\r\\n                        (click)=\\\"verifyandupdate()\\\">Submit</button> &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" *ngIf=\\\"1==2\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h6 class=\\\"text-center\\\" id=\\\"satsang\\\">Satsang Details</h6>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-2 col-form-label text-left\\\">\\r\\n                    <label>\\r\\n                        <h6>Satsang Sava Appointment</h6>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <div class=\\\"btn-group bootstrap-select w-100\\\">\\r\\n                            <select class=\\\"selectpicker w-100\\\" data-size=\\\"7\\\" data-style=\\\"btn btn-primary btn-round\\\"\\r\\n                                title=\\\"Select...\\\">\\r\\n                                <option disabled selected>Select...</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-xl-1\\\"></div>\\r\\n                <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-2 col-form-label text-left\\\">\\r\\n                    <label>\\r\\n                        <h6>Member Enqiry</h6>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <div class=\\\"btn-group bootstrap-select w-100\\\">\\r\\n                            <select class=\\\"selectpicker w-100\\\" data-size=\\\"7\\\" data-style=\\\"btn btn-primary btn-round\\\"\\r\\n                                title=\\\"Select...\\\">\\r\\n                                <option disabled selected>Any Family Member Living in Foreign Country?</option>\\r\\n                                <option value=\\\"2\\\">Yes</option>\\r\\n                                <option value=\\\"3\\\">No</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-2 col-form-label text-left\\\">\\r\\n                    <label>\\r\\n                        <h6>Mandal Sabha Attendance</h6>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <div class=\\\"btn-group bootstrap-select w-100\\\">\\r\\n                            <select class=\\\"selectpicker w-100\\\" data-size=\\\"7\\\" data-style=\\\"btn btn-primary btn-round\\\"\\r\\n                                title=\\\"Select...\\\">\\r\\n                                <option disabled selected>Select...</option>\\r\\n                                <option value=\\\"2\\\" id=\\\"yes\\\">Yes</option>\\r\\n                                <option value=\\\"3\\\">No</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-xl-1\\\"></div>\\r\\n                <!-- <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-2 col-form-label text-center\\\">\\r\\n                    <label>\\r\\n                        <h6>Member Enquiry</h6>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                    <div class=\\\"dropdown\\\">\\r\\n                        <div class=\\\"btn-group bootstrap-select w-100\\\">\\r\\n                            <select class=\\\"selectpicker w-100\\\" data-size=\\\"7\\\" data-style=\\\"btn btn-primary btn-round\\\"\\r\\n                                title=\\\"Select...\\\">\\r\\n                                <option disabled selected>Any Member Living in Foreign Country?</option>\\r\\n                                <option value=\\\"2\\\">Yes</option>\\r\\n                                <option value=\\\"3\\\">No</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-sm-12 col-md-1 col-lg-1 col-xl-2 col-form-label text-left\\\">\\r\\n                    <label>\\r\\n                        <h6>Satsang Sava History</h6>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-12 col-md-3 col-lg-3 col-xl-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <textarea type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"History!\\\"></textarea>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nexport const DashboardRoutes: Routes = [{\r\n\r\n    path: '',\r\n    children: [ {\r\n      path: 'dashboard',\r\n      component: DashboardComponent\r\n  },\r\n]\r\n}];\r\n","export class Profession {\r\n    constructor(\r\n       \r\n//  Dashboard model variables\r\n        public contactNo?: number,\r\n        public firstName?: string,\r\n        public middleName?: string,\r\n        public lastName?: string,\r\n        public mandalId?: number,\r\n        public mandalName?: string,\r\n        public mandalType?: string,\r\n        public relationship?: string,\r\n        public index?: number,\r\n        public familyId?:number,\r\n        public address?: string,\r\n        public city?: string,\r\n        public pincode?: number,\r\n        public area?: string,\r\n        public kshetra?:string,\r\n        public education?: string,\r\n        public profession?: string,\r\n        public occupation?: string,\r\n        public businessType?: string,\r\n        public skill?: string,\r\n        public workInfo?: string,\r\n        public status?:number,\r\n        public email?: string,\r\n        public bloodGrp?: string,\r\n        public dob?: string,\r\n        public gender?: string,\r\n        public maritalStatus?: string,\r\n        public isForeignCountry?: boolean,\r\n        public foreignCountry?: string,\r\n        public foreignCity?: string,\r\n        public foreignContact?: string,\r\n        public userId?:string,\r\n        public tag?:string,\r\n        public prepareIelts?:string,\r\n        public general?:boolean,\r\n        public medium?:boolean,\r\n        public vip?:boolean,\r\n        public mvip?:boolean,\r\n        public politician?:boolean,\r\n        public company?:string,\r\n        public native?:string,\r\n        public businesscity?:string\r\n    \r\n    ){}\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Dashboard } from './dashboard.model';\r\nimport { Mandal } from './mandal.model'\r\nimport { Relation } from './relation.model'\r\nimport { DashboardService } from './dashboard.service';\r\nimport { ApiService } from 'app/api.service';\r\nimport { Profession } from './profession.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public dashboardModelarr: Dashboard[] = [];\r\n  public professionModel: Profession[] = [];\r\n  public professionViewModel: Profession = new Profession;\r\n  public professionModelList: Profession[] = [];\r\n  public duplicateUser: Profession = new Profession;\r\n  public duplicateFamily: Profession[] = [];\r\n  public dashboardModel: Dashboard = new Dashboard;\r\n  public mandalModel: Mandal[] = [];\r\n  public relationModel: Relation[] = [];\r\n  public memberlist;\r\n  tot_mem: number = 1;\r\n\r\n  Role: any;\r\n  relationList;\r\n  mandalList: any = [];\r\n  mandalTypeList;\r\n  addedMembers;\r\n  public strpArray: any = [];\r\n  basicInfo: any = [];\r\n  // selectedMandalType = 'Select Mandal Type';\r\n  selectedRelation = 'Self';\r\n  selectedMandal = 'Select Mandal';\r\n  totalFamily: any = [];\r\n  viewMembers: any = [];\r\n  tFamily: any = [];\r\n  totalHaribhakt: any = [];\r\n  tHaribhakt: any = [];\r\n  tMandal: any = [];\r\n  tYellow: any = [];\r\n  totalRedTick: any = [];\r\n  tRedList: any = [];\r\n  tGreen: any = [];\r\n  totalYelloTick: any = [];\r\n  totalGreenTick: any = [];\r\n  search: string = '';\r\n  haribhakt: any = [];\r\n  mainMob: any;\r\n  focus;\r\n  contactNoFormArray: any;\r\n\r\n\r\n  otp: any;\r\n  professionList: any = [];\r\n  allMandalList: any = [];\r\n  familyId: number;\r\n  redId: any;\r\n  oldUser: boolean = false;\r\n  selectedName: any;\r\n  formdate: Date = new Date();\r\n\r\n  isCountry: boolean = false;\r\n  openFamiliesFlag: boolean = false;\r\n  openHaribhaktFlag: boolean = false;\r\n  openMandalFlag: boolean = false;\r\n  openRedtickFlag: boolean = false;\r\n  openYellowtickFlag: boolean = false;\r\n  openGreentickFlag: boolean = false;\r\n  bloodGroupDataList: any = [];\r\n  maratialData: any = [];\r\n  isOpenForm: boolean = false;\r\n  updateotp:any;\r\n  haribhaktTagsdata: any = [];\r\n  updateHariDetail: any = [];\r\n\r\n  constructor(\r\n    private dashboardService: DashboardService,\r\n    private apiService: ApiService,\r\n    private avctivatedroute: ActivatedRoute\r\n  ) {\r\n    this.Role = localStorage.getItem('role');\r\n    this.mainMob = localStorage.getItem('mob');\r\n    // this.avctivatedroute.queryParams.subscribe((res: any) => {\r\n    //   this.mainMob = res.mob;\r\n    let obj = {\r\n      mob: this.mainMob\r\n    }\r\n    if (this.Role == undefined) {\r\n      this.getOldDetails(obj);\r\n    }\r\n\r\n\r\n    this.formdate\r\n\r\n\r\n\r\n    // })\r\n    this.tot_mem = 0;\r\n    this.professionList = [\r\n      { name: 'Job' },\r\n      { name: 'Business' },\r\n      { name: 'Housewife' },\r\n      { name: 'Student' },\r\n      { name: 'Other' }\r\n    ]\r\n    this.bloodGroupDataList = [\r\n      { name: 'A Positive' },\r\n      { name: 'A Negative' },\r\n      { name: 'B Positive' },\r\n      { name: 'B Negative' },\r\n      { name: 'AB Positive' },\r\n      { name: 'AB Negative' },\r\n      { name: 'O Positive' },\r\n      { name: 'O Negative' },\r\n      { name: 'Unknown' },\r\n    ]\r\n    this.maratialData = [\r\n      { name: 'Single' },\r\n      { name: 'Married' },\r\n      { name: 'Unmarried' },\r\n      { name: 'Divorced' },\r\n      { name: 'Widowed' }\r\n    ]\r\n    this.haribhaktTagsdata = [\r\n      { name: 'General' },\r\n      { name: 'Medium' },\r\n      { name: 'Vip' },\r\n      { name: 'Mvip' },\r\n      { name: 'Politician' }\r\n    ]\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.Role != undefined) {\r\n      this.getHaribhakt();\r\n      this.getRedTickCount();\r\n      this.getYellowTickCount();\r\n      this.getGreenTickCount();\r\n      this.getAllFamily();\r\n      this.getAllmandal();\r\n\r\n    }\r\n    else {\r\n      let obj = {\r\n        mob: this.mainMob\r\n      }\r\n      this.getOldDetails(obj);\r\n\r\n    }\r\n\r\n    this.getrelation();\r\n    this.getMandalType();\r\n  }\r\n  getOldDetails(data) {\r\n    this.dashboardService.getOldDetails(data).subscribe((res: any) => {\r\n\r\n      if (res != 'no family' && res.length > 0) {\r\n        this.familyId = res[0].familyId;\r\n        this.professionModelList = res;\r\n        this.isOpenForm = false;\r\n        this.oldUser = true;\r\n      } else {\r\n        this.newUser()\r\n      }\r\n    })\r\n  }\r\n  newUser() {\r\n    $(document).ready(function () {\r\n      $(\"#exampleModalCenter\").modal('show');\r\n    });\r\n  }\r\n  openEdit(data) {\r\n    if (data.status == 1) {\r\n      this.dashboardModelarr.push(data);\r\n    } else if (data.status == 2) {\r\n      this.professionModel.push(data)\r\n    } else {\r\n\r\n    }\r\n  }\r\n  viewEditHaribhakatDetails(data) {\r\n    this.professionViewModel = data;\r\n    this.professionViewModel.general = false;\r\n    this.professionViewModel.medium = false;\r\n    this.professionViewModel.vip = false;\r\n    this.professionViewModel.mvip = false;\r\n    this.professionViewModel.politician = false;\r\n\r\n    const str = this.professionViewModel.dob;\r\n    const date = new Date(str);\r\n    this.formdate = date;\r\n\r\n    $(document).ready(function () {\r\n      $(\"#editCustomerModal\").modal('show');\r\n    });\r\n  }\r\n  verifyandupdate() {\r\n    let data = {\r\n      contactno: this.professionViewModel.contactNo,\r\n      otp: this.updateotp,\r\n    };\r\n    this.dashboardService.verifyUserOTP(data).subscribe((res: any) => {\r\n      if (res == 'wrong') {\r\n        this.apiService.showNotification('top', 'right', 'OTP does not Match Please try Again.', 'danger');\r\n        $(document).ready(function () {\r\n          $(\"#DuplicateNoModalCenterforUpdate\").modal('show');\r\n        });\r\n\r\n      } else if (res == 'err') {\r\n        this.apiService.showNotification('top', 'right', 'Something is wrong please try again.', 'danger');\r\n      } else {\r\n        this.dashboardService.updatePersonalInfo(this.professionViewModel).subscribe((res: any) => {\r\n          if (res != 'success') {\r\n            this.apiService.showNotification('top', 'right', ' Error in Information Updation.', 'danger');\r\n          } else {\r\n            this.apiService.showNotification('top', 'right', 'Information Updated Successfully.', 'success');\r\n          }\r\n          this.dashboardService.removeLastInsertedOTP(data).subscribe();\r\n        });\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n  updateHarbhakatDetailsById() {\r\n    if(this.Role == undefined){\r\n      let data = {\r\n        contactno: this.professionViewModel.contactNo\r\n      };\r\n      this.dashboardService.saveAndSendOtp(data).subscribe((data: any) => {\r\n        if (data == 'sent') {\r\n          this.apiService.showNotification('top', 'right', 'OTP Sent Successfully.', 'success');\r\n          $(document).ready(function () {\r\n            $(\"#DuplicateNoModalCenterforUpdate\").modal('show');\r\n          });\r\n        }\r\n      })\r\n    }else{\r\n      this.dashboardService.updatePersonalInfo(this.professionViewModel).subscribe((res: any) => {\r\n        if (res != 'success') {\r\n          this.apiService.showNotification('top', 'right', ' Error in Information Updation.', 'danger');\r\n        } else {\r\n          this.apiService.showNotification('top', 'right', 'Information Updated Successfully.', 'success');\r\n        }\r\n       \r\n      });\r\n    }\r\n   \r\n  }\r\n  removeItem(i) {\r\n    this.dashboardModelarr.splice(i, 1);\r\n    // this.tot_mem = this.dashboardModelarr.length;\r\n  }\r\n  getAllFamily() {\r\n    this.dashboardService.getAllFamilyList().subscribe((res: any) => {\r\n      debugger\r\n      this.totalFamily = res;\r\n      this.tFamily = res;\r\n      for (let i = 0; i < this.totalFamily.length; i++) {\r\n        this.totalFamily[i].index = i + 1;\r\n      }\r\n\r\n    })\r\n  }\r\n  viewFamilyMembersDetails(id) {\r\n    this.viewMembers = [];\r\n    this.totalHaribhakt.forEach((element, index) => {\r\n      if (element.familyId == id) {\r\n        element.index = index + 1;\r\n        this.viewMembers.push(element);\r\n      }\r\n    });\r\n  }\r\n  searchFamiliesList(val) {\r\n    if (this.search == '') {\r\n      this.totalFamily = this.tFamily;\r\n    } else {\r\n      this.transform(this.tFamily, val);\r\n    }\r\n  }\r\n  transform(totalFamily: any[], searchValue: string) {\r\n    this.totalFamily = [];\r\n    totalFamily.forEach(element => {\r\n      if (element.mobNo.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalFamily.push(element);\r\n      }\r\n      else if (element.firstName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalFamily.push(element);\r\n      }\r\n      else if (element.middleName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalFamily.push(element);\r\n      }\r\n      else if (element.lastName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalFamily.push(element);\r\n      }\r\n    })\r\n  }\r\n  getHaribhakt() {\r\n    this.dashboardService.getAllHaribhakt().subscribe((res: any) => {\r\n      this.totalHaribhakt = res;\r\n      this.tHaribhakt = res;\r\n      for (let i = 0; i < this.totalHaribhakt.length; i++) {\r\n        this.totalHaribhakt[i].index = i + 1;\r\n      }\r\n    });\r\n  }\r\n  setGeneralTagbyAdmin() {\r\n    this.professionViewModel.general;\r\n  }\r\n  searchHaribhaktList(val) {\r\n    if (this.search == '') {\r\n      this.totalHaribhakt = this.tHaribhakt;\r\n    } else {\r\n      this.transformHaribhakt(this.tHaribhakt, val);\r\n    }\r\n  }\r\n  transformHaribhakt(totalHaribhakt: any[], searchValue: string) {\r\n    this.totalHaribhakt = [];\r\n    totalHaribhakt.forEach(element => {\r\n      if (element.contactNo.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalHaribhakt.push(element);\r\n      }\r\n      else if (element.firstName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalHaribhakt.push(element);\r\n      }\r\n      else if (element.mandalName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalHaribhakt.push(element);\r\n      }\r\n      else if (element.lastName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalHaribhakt.push(element);\r\n      }\r\n      else if (element.relationship.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalHaribhakt.push(element);\r\n      }\r\n    })\r\n  }\r\n  removeHaribhaktList(id) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You want to delete! If you delete Registered Member then the member will be removed from family.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger',\r\n      },\r\n      confirmButtonText: 'Yes',\r\n      buttonsStyling: false\r\n    }).then((result) => {\r\n      if (result.value == true) {\r\n        Swal.fire({\r\n          title: 'Are you sure?',\r\n          text: \"You want to delete! If you delete Registered Member then the member will be removed from family.\",\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          customClass: {\r\n            confirmButton: 'btn btn-success',\r\n            cancelButton: 'btn btn-danger',\r\n          },\r\n          confirmButtonText: 'Yes',\r\n          buttonsStyling: false\r\n        }).then((result) => {\r\n          if (result.value == true) {\r\n            this.dashboardService.removeHaribhaktDetails(id).subscribe((req) => {\r\n              this.apiService.showNotification('top', 'right', 'Offer removed Successfully.', 'success');\r\n\r\n            })\r\n            Swal.fire(\r\n              {\r\n                title: 'Deleted!',\r\n                text: 'Your Offer has been deleted.',\r\n                icon: 'success',\r\n                customClass: {\r\n                  confirmButton: \"btn btn-success\",\r\n                },\r\n                buttonsStyling: false\r\n              }\r\n            )\r\n            this.getHaribhakt();\r\n\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n  getRedTickCount() {\r\n    this.dashboardService.getRedtickCount().subscribe((res: any) => {\r\n      this.totalRedTick = res;\r\n    })\r\n  }\r\n  getRedTickListForAll() {\r\n\r\n    this.dashboardService.getRedtickCount().subscribe((data: any) => {\r\n      this.tRedList = data;\r\n      for (let i = 0; i < this.tRedList.length; i++) {\r\n        this.tRedList[i].index = i + 1;\r\n      }\r\n    });\r\n  }\r\n  getYellowTickCount() {\r\n    this.dashboardService.getYellowtickCount().subscribe((res: any) => {\r\n      this.totalYelloTick = res;\r\n      this.tYellow = res;\r\n      for (let i = 0; i < this.totalYelloTick.length; i++) {\r\n        this.totalYelloTick[i].index = i + 1;\r\n      }\r\n    })\r\n  }\r\n  searchYellowList(val) {\r\n    if (this.search == '') {\r\n      this.totalYelloTick = this.tYellow;\r\n    } else {\r\n      this.transformYellow(this.tYellow, val);\r\n    }\r\n  }\r\n  transformYellow(totalYelloTick: any[], searchValue: string) {\r\n    this.totalYelloTick = [];\r\n    totalYelloTick.forEach(element => {\r\n      if (element.firstName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalYelloTick.push(element);\r\n      }\r\n      else if (element.lastName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalYelloTick.push(element);\r\n      }\r\n      else if (element.mandalName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalYelloTick.push(element);\r\n      }\r\n      else if (element.relationship.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalYelloTick.push(element);\r\n      }\r\n      else if (element.contactNo.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalYelloTick.push(element);\r\n      }\r\n    })\r\n  }\r\n  getGreenTickCount() {\r\n    this.dashboardService.getGreentickCount().subscribe((res: any) => {\r\n      this.totalGreenTick = res;\r\n      this.tGreen = res;\r\n      for (let i = 0; i < this.totalGreenTick.length; i++) {\r\n        this.totalGreenTick[i].index = i + 1;\r\n      }\r\n    })\r\n  }\r\n\r\n  searchGreenList(val) {\r\n    if (this.search == '') {\r\n      this.totalGreenTick = this.tGreen;\r\n    } else {\r\n      this.transformGreen(this.tGreen, val);\r\n    }\r\n  }\r\n  transformGreen(totalGreenTick: any[], searchValue: string) {\r\n    this.totalGreenTick = [];\r\n    totalGreenTick.forEach(element => {\r\n      if (element.firstName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalGreenTick.push(element);\r\n      }\r\n      else if (element.lastName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalGreenTick.push(element);\r\n      }\r\n      else if (element.mandalName.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalGreenTick.push(element);\r\n      }\r\n      else if (element.relationship.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalGreenTick.push(element);\r\n      }\r\n      else if (element.contactNo.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.totalGreenTick.push(element);\r\n      }\r\n    })\r\n  }\r\n  isForigenOpen(data, ind, type?) {\r\n    if (type == 'modal') {\r\n      this.isCountry = true;\r\n      this.professionViewModel.isForeignCountry = true;\r\n    }\r\n    else {\r\n      this.isCountry = true;\r\n      this.professionModel[ind].isForeignCountry = true;\r\n    }\r\n\r\n  }\r\n  isForigenClose(data, ind, type?) {\r\n    if (type == 'modal') {\r\n      this.isCountry = false;\r\n      this.professionViewModel.isForeignCountry = false;\r\n    }\r\n    else {\r\n      this.isCountry = false;\r\n      this.professionModel[ind].isForeignCountry = false;\r\n    }\r\n\r\n\r\n  }\r\n  getrelation() {\r\n    this.dashboardService.getAllRelationList().subscribe((data: any) => {\r\n      this.relationList = data;\r\n    });\r\n  }\r\n  getMandalType() {\r\n    this.dashboardService.getAllMandaltypeList().subscribe((data: any) => {\r\n      this.mandalTypeList = data;\r\n    });\r\n  }\r\n  getmandal(type) {\r\n    this.mandalList = [];\r\n    this.dashboardService.getMandalList(type).subscribe((data: any) => {\r\n      this.mandalList = data;\r\n    });\r\n  }\r\n  getAllmandal() {\r\n    this.mandalList = [];\r\n    this.dashboardService.getAllMandalList().subscribe((data: any) => {\r\n      this.allMandalList = data;\r\n      this.tMandal = data;\r\n      for (let i = 0; i < this.allMandalList.length; i++) {\r\n        this.allMandalList[i].index = i + 1;\r\n      }\r\n    });\r\n  }\r\n  searchManadalList(val) {\r\n    if (this.search == '') {\r\n      this.allMandalList = this.tMandal;\r\n    } else {\r\n      this.transformMandal(this.tMandal, val);\r\n    }\r\n  }\r\n  transformMandal(allMandalList: any[], searchValue: string) {\r\n    this.allMandalList = [];\r\n    allMandalList.forEach(element => {\r\n      if (element.mandaltype.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.allMandalList.push(element);\r\n      }\r\n      else if (element.name.toLocaleLowerCase().includes(searchValue.toLocaleLowerCase())) {\r\n        this.allMandalList.push(element);\r\n      }\r\n    })\r\n  }\r\n  removeMandalList(id) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You want to delete! If you delete Offer then all the offer data will be delete.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger',\r\n      },\r\n      confirmButtonText: 'Yes',\r\n      buttonsStyling: false\r\n    }).then((result) => {\r\n      if (result.value == true) {\r\n        this.dashboardService.removeHaribhaktDetails(id).subscribe((req) => {\r\n          this.apiService.showNotification('top', 'right', 'Offer removed Successfully.', 'success');\r\n\r\n        })\r\n        Swal.fire(\r\n          {\r\n            title: 'Deleted!',\r\n            text: 'Your Offer has been deleted.',\r\n            icon: 'success',\r\n            customClass: {\r\n              confirmButton: \"btn btn-success\",\r\n            },\r\n            buttonsStyling: false\r\n          }\r\n        )\r\n        this.getHaribhakt();\r\n      }\r\n    })\r\n\r\n  }\r\n  closeModal(index) {\r\n    this.professionModel.splice(index, 1);\r\n  }\r\n\r\n\r\n  confirmationForHead() {\r\n    Swal.fire({\r\n      title: 'Are you a head of the family?',\r\n      // text: \"You want to delete! If you delete Offer then all the offer data will be delete.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger',\r\n      },\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      buttonsStyling: false\r\n    }).then((result) => {\r\n      if (result.value == true) {\r\n        this.professionModel[0].contactNo = this.mainMob;\r\n      } else {\r\n        this.professionModel[1].contactNo = this.mainMob;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  selectedMandalType(mandaltype, ind, type?) {\r\n    if (type == 'array') {\r\n      this.mandalTypeList.forEach(element => {\r\n        if (element.mandaltype == mandaltype) {\r\n          this.selectedName = element.mandaltype;\r\n          this.professionModel[ind].mandalType = element.mandaltype;\r\n          this.getmandal(element.mandaltype);\r\n        }\r\n        // this.MandalModel.mandaltype = this.selectedName;\r\n      })\r\n    }\r\n    else {\r\n      this.mandalTypeList.forEach(element => {\r\n        if (element.mandaltype == mandaltype) {\r\n          this.selectedName = element.mandaltype;\r\n          this.professionViewModel.mandalType = element.mandaltype;\r\n          this.getmandal(element.mandaltype);\r\n        }\r\n        // this.MandalModel.mandaltype = this.selectedName;\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  selectedrelation(id, ind, type) {\r\n    if (type == 'modal') {\r\n      this.relationList.forEach(element => {\r\n        if (element.id == id) {\r\n          this.selectedRelation = element.name;\r\n          this.professionViewModel.relationship = element.name;\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.relationList.forEach(element => {\r\n        if (element.id == id) {\r\n          this.selectedRelation = element.name;\r\n          this.professionModel[ind].relationship = element.name;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  AddExistUser() {\r\n    let data = {\r\n      contactno: this.duplicateUser.contactNo,\r\n      otp: this.otp,\r\n    };\r\n    this.dashboardService.verifyUserOTP(data).subscribe((res: any) => {\r\n      if (res == 'wrong') {\r\n        this.apiService.showNotification('top', 'right', 'OTP does not Match Please try Again.', 'danger');\r\n        $(document).ready(function () {\r\n          $(\"#DuplicateNoModalCenter\").modal('show');\r\n        });\r\n\r\n      } else if (res == 'err') {\r\n        this.apiService.showNotification('top', 'right', 'Something is wrong please try again.', 'danger');\r\n      } else {\r\n        let test = {\r\n          familyId: this.familyId,\r\n          oldFamilyId: this.duplicateUser.familyId\r\n        }\r\n        this.dashboardService.addFamilytoNew(test).subscribe((res: any) => {\r\n          if (res.length > 0) {\r\n            this.familyId = res[0].familyId;\r\n            let data = { mob: this.mainMob };\r\n            this.apiService.showNotification('top', 'right', 'Family added successfully.', 'success');\r\n            this.getOldDetails(data);\r\n            this.dashboardService.removeLastInsertedOTP(data).subscribe();\r\n          }\r\n        })\r\n\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  selectedprofession(name, index, type?) {\r\n    if (type == 'modal') {\r\n      this.professionViewModel.profession = name;\r\n    }\r\n    else {\r\n      this.professionModel[index].profession = name;\r\n    }\r\n  }\r\n  openProffesionalForm() {\r\n    // this.professionModel = this.strpArray;\r\n    this.professionModel = [];\r\n    this.strpArray.forEach((ele: any) => {\r\n      if (ele.status == 1) {\r\n        this.professionModel.push(ele);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  getSavedMembers() {\r\n    this.dashboardService.getSavedMembersList().subscribe((data: any) => {\r\n      this.addedMembers = data;\r\n    })\r\n  }\r\n\r\n\r\n\r\n  selectedmandal(id, ind, type?) {\r\n    if (type == 'modal') {\r\n      this.mandalList.forEach(element => {\r\n        if (element.id == id) {\r\n          this.selectedMandal = element.name;\r\n          this.professionViewModel.mandalName = element.name;\r\n          this.professionViewModel.mandalId = element.id;\r\n\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.mandalList.forEach(element => {\r\n        if (element.id == id) {\r\n          this.selectedMandal = element.name;\r\n          this.professionModel[ind].mandalName = element.name;\r\n          this.professionModel[ind].mandalId = element.id;\r\n\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  AddMoreMember() {\r\n    for (let i = 0; i < this.tot_mem; i++) {\r\n      let data = {\r\n        contactNo: 0,\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        mandalName: '',\r\n        mandaltype: '',\r\n        relationship: 'Self',\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        education: '',\r\n        profession: '',\r\n        occupation: '',\r\n        businessType: '',\r\n        skill: '',\r\n        workInfo: '',\r\n        email: '',\r\n        bloodGrp: '',\r\n        dob: '',\r\n        gender: '',\r\n        maritalStatus: '',\r\n        foreignCountry: '',\r\n        foreignCity: '',\r\n        foreignContact: '',\r\n        general: false,\r\n        medium: false,\r\n        vip: false,\r\n        mvip: false,\r\n        politician: false,\r\n        company: '',\r\n        native: '',\r\n        businesscity: ''\r\n      }\r\n      this.isOpenForm = true;\r\n      this.professionModel.push(data);\r\n      if (this.professionModelList.length == 0) {\r\n        this.confirmationForHead();\r\n      }\r\n\r\n\r\n\r\n    }\r\n    // this.professionModel.length = this.tot_mem;\r\n  }\r\n\r\n  selectChangeHandlerForMarital(name, index, type?) {\r\n    if (type == 'modal') {\r\n      this.professionViewModel.maritalStatus = name;\r\n    }\r\n    else {\r\n      this.professionModel[index].maritalStatus = name;\r\n    }\r\n  }\r\n\r\n  selectedBloodData(name, index, type?) {\r\n    if (type == 'modal') {\r\n      this.professionViewModel.bloodGrp = name;\r\n    }\r\n    else {\r\n      this.professionModel[index].bloodGrp = name;\r\n    }\r\n  }\r\n  selectedHaribhaktTags(name, index, type?) {\r\n    if (type == 'modal') {\r\n      this.professionViewModel.tag = name;\r\n    }\r\n    else {\r\n      this.professionModel[index].tag = name;\r\n    }\r\n  }\r\n  savePersonalInfo(data, ind) {\r\n    let test = [];\r\n    data.status = 1;\r\n    data.tag = 'General';\r\n    data.prepareIelts = false;\r\n\r\n    if (data.relationship == 'Father') {\r\n      let obj = {\r\n        nooffammem: this.tot_mem,\r\n        mob: data.contactNo\r\n      }\r\n      this.dashboardService.createFamily(obj).subscribe((res: any) => {\r\n\r\n        if (res.length == undefined) {\r\n          this.familyId = res.insertId;\r\n          data.familyId = this.familyId;\r\n        } else {\r\n          this.familyId = res[0].familyId;\r\n          data.familyId = this.familyId;\r\n        }\r\n\r\n        test.push(data);\r\n        this.dashboardService.savePersonalInfo(test).subscribe((res: any) => {\r\n          if (res.insertId != undefined) {\r\n            data.userId = res.insertId;\r\n            this.professionModelList.push(data);\r\n            this.apiService.showNotification('top', 'right', 'Member Added Successfully.', 'success');\r\n            this.professionModel.splice(ind, 1);\r\n            this.tot_mem = this.tot_mem - 1;\r\n          }\r\n          else if (res[0].msg == 'added') {\r\n            data.userId = res[0].userId;\r\n            this.professionModelList.push(data);\r\n            this.professionModel.splice(ind, 1);\r\n            this.tot_mem = this.tot_mem - 1;\r\n            this.apiService.showNotification('top', 'right', 'Member already Added.', 'success');\r\n          }\r\n          else {\r\n            this.apiService.showNotification('top', 'right', 'Error in Adding Member.', 'danger');\r\n          }\r\n        })\r\n      })\r\n    } else if (data.relationship == 'Self' && this.familyId == undefined) {\r\n      let obj = {\r\n        nooffammem: this.tot_mem,\r\n        mob: data.contactNo\r\n      }\r\n      this.dashboardService.createFamily(obj).subscribe((res: any) => {\r\n        if (res.length == undefined) {\r\n          this.familyId = res.insertId;\r\n          data.familyId = this.familyId;\r\n        } else {\r\n          this.familyId = res[0].familyId;\r\n          data.familyId = this.familyId;\r\n        }\r\n        test.push(data);\r\n        this.dashboardService.savePersonalInfo(test).subscribe((res: any) => {\r\n          if (res.insertId != undefined) {\r\n            data.userId = res.insertId;\r\n            this.professionModelList.push(data);\r\n            this.tot_mem = this.tot_mem - 1;\r\n            this.apiService.showNotification('top', 'right', 'Member Added Successfully.', 'success');\r\n            this.professionModel.splice(ind, 1);\r\n          }\r\n          else if (res[0].msg == 'added') {\r\n            data.userId = res[0].userId;\r\n            this.professionModelList.push(data);\r\n            this.professionModel.splice(ind, 1);\r\n            this.tot_mem = this.tot_mem - 1;\r\n            this.apiService.showNotification('top', 'right', 'Member already Added.', 'success');\r\n          }\r\n          else {\r\n            this.apiService.showNotification('top', 'right', 'Error in Adding Member.', 'danger');\r\n          }\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      if (this.familyId == undefined) {\r\n        let obj = {\r\n          nooffammem: this.tot_mem,\r\n          mob: data.contactNo\r\n        }\r\n        this.dashboardService.createFamily(obj).subscribe((res: any) => {\r\n          if (res.length == undefined) {\r\n            this.familyId = res.insertId;\r\n            data.familyId = this.familyId;\r\n          } else {\r\n            this.familyId = res[0].familyId;\r\n            data.familyId = this.familyId;\r\n          }\r\n          test.push(data);\r\n          this.dashboardService.savePersonalInfo(test).subscribe((res: any) => {\r\n            if (res.insertId != undefined) {\r\n              data.userId = res.insertId;\r\n              this.professionModelList.push(data);\r\n              this.tot_mem = this.tot_mem - 1;\r\n              this.apiService.showNotification('top', 'right', 'Member Added Successfully.', 'success');\r\n              this.professionModel.splice(ind, 1);\r\n            }\r\n            else if (res[0].msg == 'added') {\r\n              data.userId = res[0].userId;\r\n              this.professionModelList.push(data);\r\n              this.professionModel.splice(ind, 1);\r\n              this.tot_mem = this.tot_mem - 1;\r\n              this.apiService.showNotification('top', 'right', 'Member already Added.', 'success');\r\n            }\r\n            else {\r\n              this.apiService.showNotification('top', 'right', 'Error in Adding Member.', 'danger');\r\n            }\r\n          })\r\n        })\r\n      } else {\r\n        data.familyId = this.familyId;\r\n        test.push(data);\r\n        this.dashboardService.savePersonalInfo(test).subscribe((res: any) => {\r\n          if (res.insertId != undefined) {\r\n            data.userId = res.insertId;\r\n            this.professionModelList.push(data);\r\n            this.professionModel.splice(ind, 1);\r\n            this.tot_mem = this.tot_mem - 1;\r\n            this.apiService.showNotification('top', 'right', 'Member Added Successfully.', 'success');\r\n          }\r\n          else if (res[0].msg == 'added') {\r\n            data.userId = res[0].userId;\r\n            this.professionModelList.push(data);\r\n            this.professionModel.splice(ind, 1);\r\n            this.tot_mem = this.tot_mem - 1;\r\n            this.apiService.showNotification('top', 'right', 'Member already Added.', 'success');\r\n          }\r\n          else {\r\n            this.apiService.showNotification('top', 'right', 'Error in Adding Member.', 'danger');\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  verifyNumber(data) {\r\n    this.contactNoFormArray = '';\r\n    let val = { mob: this.professionModel[data].contactNo }\r\n    this.dashboardService.verifyNumber(val).subscribe((res: any) => {\r\n\r\n      if (res.length > 0) {\r\n        this.duplicateUser = res[0];\r\n        this.duplicateFamily = res;\r\n        this.duplicateUser.index = data;\r\n        $(document).ready(function () {\r\n          $(\"#DuplicateNoModalCenter1\").modal('show');\r\n        });\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  openOTPforAddUser() {\r\n    debugger\r\n    let data = {\r\n      contactno: this.duplicateUser.contactNo\r\n    };\r\n    this.dashboardService.saveAndSendOtp(data).subscribe((data: any) => {\r\n      debugger\r\n      if (data == 'sent') {\r\n        this.apiService.showNotification('top', 'right', 'OTP Sent Successfully.', 'success');\r\n        $(document).ready(function () {\r\n          $(\"#DuplicateNoModalCenter\").modal('show');\r\n        });\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  openViewInfo(data) {\r\n    this.professionViewModel = data;\r\n    $(document).ready(function () {\r\n      $(\"#editCustomerModal\").modal('show');\r\n    });\r\n\r\n  }\r\n  updateHaribhaktInfo(data) {\r\n    if (this.professionViewModel.general == true) {\r\n      this.professionViewModel.medium = false;\r\n      this.professionViewModel.vip = false;\r\n      this.professionViewModel.mvip = false;\r\n      this.professionViewModel.politician = false;\r\n    }\r\n    else if (this.professionViewModel.medium == true) {\r\n      this.professionViewModel.general = false;\r\n      this.professionViewModel.vip = false;\r\n      this.professionViewModel.mvip = false;\r\n      this.professionViewModel.politician = false;\r\n    }\r\n    else if (this.professionViewModel.vip == true) {\r\n      this.professionViewModel.general = false;\r\n      this.professionViewModel.medium = false;\r\n      this.professionViewModel.mvip = false;\r\n      this.professionViewModel.politician = false;\r\n    }\r\n    else if (this.professionViewModel.mvip == true) {\r\n      this.professionViewModel.general = false;\r\n      this.professionViewModel.medium = false;\r\n      this.professionViewModel.vip = false;\r\n      this.professionViewModel.politician = false;\r\n    }\r\n    else if (this.professionViewModel.politician == true) {\r\n      this.professionViewModel.general = false;\r\n      this.professionViewModel.medium = false;\r\n      this.professionViewModel.vip = false;\r\n      this.professionViewModel.mvip = false;\r\n    }\r\n    this.dashboardService.updateHaribhakt(data).subscribe((res: any) => {\r\n\r\n    })\r\n  }\r\n  openTotalFamilies() {\r\n    this.openFamiliesFlag = true;\r\n    this.openHaribhaktFlag = false;\r\n    this.openMandalFlag = false;\r\n    this.openRedtickFlag = false;\r\n    this.openYellowtickFlag = false;\r\n  }\r\n  openTotalHaribhakt() {\r\n    this.openFamiliesFlag = false;\r\n    this.openHaribhaktFlag = true;\r\n    this.openMandalFlag = false;\r\n    this.openRedtickFlag = false;\r\n  }\r\n  openTotalMandal() {\r\n    this.openMandalFlag = true;\r\n    this.openFamiliesFlag = false;\r\n    this.openHaribhaktFlag = false;\r\n    this.openRedtickFlag = false;\r\n    this.openYellowtickFlag = false;\r\n    this.openGreentickFlag = false;\r\n  }\r\n  opentotalRedtick() {\r\n    this.openYellowtickFlag = false;\r\n    this.openRedtickFlag = true;\r\n    this.openMandalFlag = false;\r\n    this.openFamiliesFlag = false;\r\n    this.openHaribhaktFlag = false;\r\n    this.openGreentickFlag = false;\r\n    this.getRedTickListForAll();\r\n  }\r\n  openTotalYellowTick() {\r\n    this.openYellowtickFlag = true;\r\n    this.openRedtickFlag = false;\r\n    this.openMandalFlag = false;\r\n    this.openFamiliesFlag = false;\r\n    this.openHaribhaktFlag = false;\r\n    this.openGreentickFlag = false;\r\n\r\n  }\r\n  openTotalGreenTick() {\r\n    this.openGreentickFlag = true;\r\n    this.openYellowtickFlag = false;\r\n    this.openRedtickFlag = false;\r\n    this.openMandalFlag = false;\r\n    this.openFamiliesFlag = false;\r\n    this.openHaribhaktFlag = false;\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutes } from './dashboard.routing';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MaterialModule } from 'app/material/material.module';\r\nimport { MandalModule } from 'app/mandal/mandal.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(DashboardRoutes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    NgxPaginationModule,\r\n    MandalModule   \r\n  ],\r\n  declarations: [DashboardComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n\r\n})\r\n\r\nexport class DashboardModule { }\r\n","export default \"@import url('https://fonts.googleapis.com/css2?family=Mulish:wght@500&display=swap');\\r\\n.status {\\r\\n    margin-top: .75%;\\r\\n}\\r\\n.loopforms {\\r\\n    margin-top: 30px;\\r\\n    margin-right: 30px;\\r\\n    margin-left: 30px;\\r\\n}\\r\\n#myForm {\\r\\n    font-size: 20px;\\r\\n    font-weight: 600;\\r\\n    border: 4px solid rgba(13, 207, 6, 0.501);\\r\\n    vertical-align: middle;\\r\\n    line-height: 3.5;\\r\\n    margin-bottom: 15px;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n#myForm1 {\\r\\n    font-size: 20px;\\r\\n    font-weight: 600;\\r\\n    border: 4px solid #fbc658;\\r\\n    vertical-align: middle;\\r\\n    line-height: 3.5;\\r\\n    margin-bottom: 15px;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n#myForm2 {\\r\\n    font-size: 20px;\\r\\n    font-weight: 600;\\r\\n    border: 4px solid rgba(246, 12, 12, 0.852);\\r\\n    vertical-align: middle;\\r\\n    line-height: 3.5;\\r\\n    border-radius: 8px;\\r\\n}\\r\\n#dropdown{\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n    font-size: 16px;\\r\\n    padding: 10px;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n.row{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n#birthday{\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n    font-size: 14px;\\r\\n    padding: 10px;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n#satsang{\\r\\n    margin-top: 40px;\\r\\n    margin-bottom: 40px;\\r\\n    font-size: 20px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n}\\r\\n#detailForm{\\r\\n    width: 100%;\\r\\n    border-radius: 5px;\\r\\n    font-size: 16px;\\r\\n    padding: 10px;\\r\\n    opacity: 0.7;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n.ml5{\\r\\n    margin-left: 10px !important;\\r\\n}\\r\\n.switch {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  width: 60px;\\r\\n  height: 34px;\\r\\n}\\r\\n.switch input { \\r\\n  opacity: 0;\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n}\\r\\n.slider {\\r\\n  position: absolute;\\r\\n  cursor: pointer;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  background-color: #ccc;\\r\\n  -webkit-transition: .4s;\\r\\n  transition: .4s;\\r\\n}\\r\\n.slider:before {\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  height: 26px;\\r\\n  width: 26px;\\r\\n  left: 4px;\\r\\n  bottom: 4px;\\r\\n  background-color: white;\\r\\n  -webkit-transition: .4s;\\r\\n  transition: .4s;\\r\\n}\\r\\ninput:checked + .slider {\\r\\n  background-color: #2196F3;\\r\\n}\\r\\ninput:focus + .slider {\\r\\n  -webkit-box-shadow: 0 0 1px #2196F3;\\r\\n          box-shadow: 0 0 1px #2196F3;\\r\\n}\\r\\ninput:checked + .slider:before {\\r\\n  -webkit-transform: translateX(26px);\\r\\n  transform: translateX(26px);\\r\\n}\\r\\n/* Rounded sliders */\\r\\n.slider.round {\\r\\n  border-radius: 34px;\\r\\n}\\r\\n.slider.round:before {\\r\\n  border-radius: 50%;\\r\\n}\\r\\n.checked {\\r\\n  color: gold;\\r\\n}\\r\\ninput::-webkit-outer-spin-button,\\r\\ninput::-webkit-inner-spin-button {\\r\\n  -webkit-appearance: none;\\r\\n  margin: 0;\\r\\n}\\r\\n/* Firefox */\\r\\ninput[type=number] {\\r\\n  -moz-appearance: textfield;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9GQUFvRjtBQUNwRjtJQUNJLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIseUNBQXlDO0lBQ3pDLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLDBDQUEwQztJQUMxQyxzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QjtBQUVBO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLDRDQUE0QztBQUNoRDtBQUVBO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsYUFBYTtJQUNiLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUVBO0VBQ0UsVUFBVTtFQUNWLFFBQVE7RUFDUixTQUFTO0FBQ1g7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUNULHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsZUFBZTtBQUNqQjtBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osV0FBVztFQUNYLFNBQVM7RUFDVCxXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixlQUFlO0FBQ2pCO0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7QUFFQTtFQUNFLG1DQUEyQjtVQUEzQiwyQkFBMkI7QUFDN0I7QUFFQTtFQUNFLG1DQUFtQztFQUVuQywyQkFBMkI7QUFDN0I7QUFFQSxvQkFBb0I7QUFDcEI7RUFDRSxtQkFBbUI7QUFDckI7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7O0VBRUUsd0JBQXdCO0VBQ3hCLFNBQVM7QUFDWDtBQUVBLFlBQVk7QUFDWjtFQUNFLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU11bGlzaDp3Z2h0QDUwMCZkaXNwbGF5PXN3YXAnKTtcclxuLnN0YXR1cyB7XHJcbiAgICBtYXJnaW4tdG9wOiAuNzUlO1xyXG59XHJcblxyXG4ubG9vcGZvcm1zIHtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG5cclxuI215Rm9ybSB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgcmdiYSgxMywgMjA3LCA2LCAwLjUwMSk7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDMuNTtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxuXHJcbiNteUZvcm0xIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBib3JkZXI6IDRweCBzb2xpZCAjZmJjNjU4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzLjU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG59XHJcblxyXG4jbXlGb3JtMiB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgcmdiYSgyNDYsIDEyLCAxMiwgMC44NTIpO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGxpbmUtaGVpZ2h0OiAzLjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxuXHJcbiNkcm9wZG93bntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG9wYWNpdHk6IDAuNztcclxufVxyXG4ucm93e1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4jYmlydGhkYXl7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbn1cclxuI3NhdHNhbmd7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xyXG59XHJcblxyXG4jZGV0YWlsRm9ybXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG9wYWNpdHk6IDAuNztcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG59XHJcbi5tbDV7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uc3dpdGNoIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHdpZHRoOiA2MHB4O1xyXG4gIGhlaWdodDogMzRweDtcclxufVxyXG5cclxuLnN3aXRjaCBpbnB1dCB7IFxyXG4gIG9wYWNpdHk6IDA7XHJcbiAgd2lkdGg6IDA7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4uc2xpZGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjRzO1xyXG4gIHRyYW5zaXRpb246IC40cztcclxufVxyXG5cclxuLnNsaWRlcjpiZWZvcmUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGhlaWdodDogMjZweDtcclxuICB3aWR0aDogMjZweDtcclxuICBsZWZ0OiA0cHg7XHJcbiAgYm90dG9tOiA0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XHJcbiAgdHJhbnNpdGlvbjogLjRzO1xyXG59XHJcblxyXG5pbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcclxufVxyXG5cclxuaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcclxuICBib3gtc2hhZG93OiAwIDAgMXB4ICMyMTk2RjM7XHJcbn1cclxuXHJcbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XHJcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XHJcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XHJcbn1cclxuXHJcbi8qIFJvdW5kZWQgc2xpZGVycyAqL1xyXG4uc2xpZGVyLnJvdW5kIHtcclxuICBib3JkZXItcmFkaXVzOiAzNHB4O1xyXG59XHJcblxyXG4uc2xpZGVyLnJvdW5kOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi5jaGVja2VkIHtcclxuICBjb2xvcjogZ29sZDtcclxufVxyXG5pbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcclxuaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qIEZpcmVmb3ggKi9cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufSJdfQ== */\";"],"sourceRoot":"webpack:///"}